High level Overview planning:

*construction of levels could use factory creational pattern design.
*Same with creation of different items???
*Need to ensure we have only one Game class, so singleton pattern possibly?
*Actually upon further reasearch Factory for levels would be overdesigned and not make a lot of sense
*since the levels themselves don't change that much, the only thing that does would be the specific 
*data, e.g different NPCS and clues etc, they won't change much beyond that which I think factories 
*Would be made for, aka different behaved rooms (Combat room) or (Puzzle room). Instead there all
*puzzle rooms.
*Also wondering how main main loop should go, should it all be done in game? aka game spawns level
*manages player input, interactions between NPC's or should that be something different entirely??? hmmm 

*singleton as well doesn't make too much sense for one object of the game... could maybe since
*it can be accessed globally but breaks some OOP ideas not ideal, and we can just manage connections
*through include it's not too big a deal I think.

*I decided to go for simplification of factory for the levels, simply given a specific ID the 
*LevelFactory would construct a level with the ID's specific data #OfNPCS, #OfClues, etc;

*Game class:
*Starts the game, ends the game, would be in charge of the main loop, aka spawn the specific level
*change the level,  and end the game. really would be it

*Level Class:
*defines initial descriptor, has specific NPC's in each, specific leave conditions maybe?, specific
*items to be obtained by the player, and clues.
*should be abstract.

*Player Class:
*has an inventory, can do specific actions when prompted: Use [item]: allows player to use specific 
*items that can actually be used like a key. Talk [NPC]: allows player to talk to NPC maybe more idk

*NPC Class:
*gives player dialogue when prompted, depends on what player chooses to say. May hold items of their
*own, so have their own inventory too?

*inventory:
*Basically a vector holder each Player or NPC Can have, a vector of items

*Items:
*just items.  could be classified as clues, in which case those items don't do nothing, aka don't use
*them but they give player clues. But again could also be used like keys and stuff.
